<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<project name="rule-files-make" basedir=".">

  <path id="dependencies.javax.core">
    <fileset dir="${common-lib}/compile">
      <include name="${javax.transaction-api}" />
      <include name="${geronimo.jpa_3.0_spec}" />
      <include name="${javax.inject}" />
      <include name="${javax.el-api}" />
      <include name="${javax.el}" />
      <include name="${cache-api}" />
    </fileset>
  </path>

  <path id="dependencies.javax.validation">
    <fileset dir="${common-lib}/compile">
      <include name="${hibernate-validator}" />
      <include name="${validation-api}" />
      <include name="${jboss-logging}" />
      <include name="${classmate}" />
      <include name="${javax.el-api}" />
      <include name="${javax.el}" />
    </fileset>
  </path>

  <path id="dependencies.servlet">
    <path refid="dependencies.javax.core" />
    <fileset dir="${common-lib}/provided">
      <include name="${servlet-api}" />
    </fileset>
  </path>

  <path id="dependencies.spring.core">
    <fileset dir="${common-lib}/compile">
      <include name="${spring-beans}" />
      <include name="${spring-context}" />
      <include name="${spring-context-support}" />
      <include name="${spring-core}" />
      <!-- <include name="${spring-boot}" /> -->
    </fileset>
  </path>

  <path id="dependencies.spring.web">
    <path refid="dependencies.servlet" />
    <path refid="dependencies.spring.core" />
    <fileset dir="${common-lib}/compile">
      <include name="${spring-expression}" />
      <include name="${spring-web}" />
      <include name="${spring-webmvc}" />
      <include name="${spring-websocket}" />
      <include name="${spring-security-core}" />
      <include name="${spring-security-config}" />
      <include name="${spring-security-web}" />
      <include name="${spring-aop}" />
      <include name="${spring-aspects}" />
      <include name="${spring-security-aspects}" />
    </fileset>
  </path>

  <path id="dependencies.spring.jdbc">
    <path refid="dependencies.spring.core" />
    <fileset dir="${common-lib}/compile">
      <include name="${spring-expression}" />
      <include name="${spring-tx}" />
      <include name="${spring-orm}" />
      <include name="${spring-jdbc}" />
      <include name="${spring-aop}" />
      <include name="${spring-aspects}" />
    </fileset>
  </path>

  <path id="dependencies.spring.mongo">
    <path refid="dependencies.spring.core" />
    <fileset dir="${common-lib}/compile">
      <include name="${spring-data-commons}" />
      <include name="${spring-data-mongodb}" />
      <include name="${mongo-java-driver}" />
    </fileset>
  </path>

  <path id="dependencies.aspects">
    <fileset dir="${common-lib}/compile">
      <include name="${aspectjweaver}" />
      <include name="${aspectjrt}" />
    </fileset>
  </path>

  <path id="dependencies.aspectjtools">
    <fileset dir="${common-lib}/compile">
      <include name="${aspectjweaver}" />
      <include name="${aspectjrt}" />
    </fileset>
    <fileset dir="${common-lib}/provided">
      <include name="${aspectjtools}" />
    </fileset>
  </path>

  <path id="dependencies.slf4j">
    <fileset dir="${common-lib}/compile">
      <include name="${slf4j-api}" />
      <include name="${jcl-over-slf4j}" />
      <include name="${logback}" />
    </fileset>
  </path>

  <path id="dependencies.thymeleaf">
    <path refid="dependencies.spring.web" />
    <fileset dir="${common-lib}/compile">
      <include name="${thymeleaf}" />
      <include name="${thymeleaf-spring4}" />
    </fileset>
  </path>

  <path id="dependencies.s2jdbc">
    <fileset dir="${common-lib}/compile">
      <include name="${s2-framework}" />
      <include name="${s2-tiger}" />
      <include name="${s2-extension}" />
      <include name="${ognl}" />
      <include name="${javassist}" />
    </fileset>
  </path>

  <path id="dependencies.xeline.core">
    <path refid="dependencies.spring.core" />
    <path refid="dependencies.javax.validation" />
    <fileset dir="${common-lib}/compile">
      <include name="${xeline-core}" />
      <include name="${guava}" />
      <include name="${joda-time}" />
    </fileset>
  </path>

  <path id="dependencies.xeline.jdbc">
    <path refid="dependencies.xeline.core" />
    <path refid="dependencies.spring.jdbc" />
    <path refid="dependencies.s2jdbc" />
    <path refid="dependencies.slf4j" />
    <path refid="dependencies.aspects" />
    <fileset dir="${common-lib}/compile">
      <include name="${xeline-jdbc}" />
    </fileset>
  </path>

  <path id="dependencies.xeline.web">
    <path refid="dependencies.xeline.core" />
    <path refid="dependencies.spring.web" />
    <path refid="dependencies.thymeleaf" />
    <path refid="dependencies.xeline.jdbc" />
    <path refid="dependencies.slf4j" />
    <path refid="dependencies.aspects" />
    <fileset dir="${common-lib}/compile">
      <include name="${xeline-web}" />
      <include name="${xeline-report}" />
    </fileset>
  </path>

  <path id="dependencies.xeline.batch">
    <path refid="dependencies.xeline.core" />
    <path refid="dependencies.xeline.jdbc" />
    <fileset dir="${common-lib}/compile">
      <include name="${xeline-spring-batch}" />
      <include name="${javax.batch}" />
      <include name="${spring-batch-core}" />
      <include name="${spring-batch-infrastructure}" />
    </fileset>
  </path>

  <target name="props">
    <echoproperties />
  </target>

  <target name="clean">
    <delete dir="${basedir}/${target.dir}" />
  </target>

  <!-- make -->
  <target name="make.dirs">
    <mkdir dir="${basedir}/${target.main}" />
  </target>

  <target name="compile" depends="make.main, copy.main.resources" />
  <target name="make.main" depends="make.dirs">

    <javac srcdir="${basedir}/${src.main}" debug="on" deprecation="true" encoding="${java.encoding}" source="${java.source}" target="${java.target}" includes="com/xeline/**/*.java" includeantruntime="false" createMissingPackageInfoClass="false" destdir="${basedir}/${target.main}">
      <classpath refid="main.class.path" />
    </javac>

    <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpathref="dependencies.aspectjtools" />
    <iajc sourceroots="${basedir}/${src.main}" destDir="${basedir}/${target.main}" source="${java.source}" target="${java.target}" encoding="${java.encoding}">
      <aspectpath refid="main.class.path" />
    </iajc>
  </target>

  <target name="copy.main.resources">
    <copy todir="${basedir}/${target.main}">
      <fileset dir="${basedir}/${resources.main}" />
    </copy>
  </target>

  <target name="package" depends="make.pkg" />
  <target name="make.pkg" depends="clean, make.jar, make.src.jar" />

  <target name="jar" depends="make.jar" />
  <target name="make.jar" depends="make.main, copy.main.resources">
    <jar destfile="${basedir}/${target.dir}/${artifact}" update="true">
      <fileset dir="${basedir}/${target.main}" />
    </jar>
  </target>

  <target name="make.src.jar">
    <jar destfile="${basedir}/${target.dir}/${sources.artifact}" update="true">
      <fileset dir="${basedir}/${src.main}" includes="**/*.java" />
    </jar>
  </target>


  <target name="test.dirs">
    <mkdir dir="${basedir}/${target.test}" />
  </target>

  <target name="test-compile" depends="compile, make.test, copy.test.resources, copy.files.ci" />
  <target name="make.test" depends="test.dirs">

    <javac srcdir="${basedir}/${src.test}" debug="on" deprecation="true" encoding="${java.encoding}" source="${java.source}" target="${java.target}" includes="${compile.targets}" includeantruntime="false" createMissingPackageInfoClass="false" destdir="${basedir}/${target.test}">
      <classpath refid="main.class.path" />
      <classpath refid="test.class.path" />
    </javac>

    <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpathref="dependencies.aspectjtools" />
    <iajc sourceroots="${basedir}/${src.test}" destDir="${basedir}/${target.test}" source="${java.source}" target="${java.target}" encoding="${java.encoding}"> 
      <aspectPath refid="main.class.path" />
      <aspectPath refid="test.class.path" />
    </iajc>
  </target>

  <target name="copy.test.resources">
    <copy todir="${basedir}/${target.test}">
      <fileset dir="${basedir}/${resources.test}" />
    </copy>
  </target>

  <target name="test" depends="clean, compile, test-compile" unless="test.skip">
    <mkdir dir="${basedir}/${test.reports}" />
    <junit printsummary="yes" fork="yes" maxmemory="1024m">
      <jvmarg value="-Dfile.encoding=${java.encoding}"/>
      <classpath refid="main.class.path" />
      <classpath refid="test.class.path" />

      <formatter type="plain" />
      <formatter type="xml" />

      <batchtest todir="${test.reports}">
        <fileset dir="${src.test}">
          <include name="${test.targets}" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <condition property="have.batch.test.properites">
    <available file="${basedir}/${resources.test}/days.properties" />
  </condition>
  <target name="copy.batch.test.properties" if="have.batch.test.properites">
    <copy file="${basedir}/${resources.test}/days.properties" tofile="${xeline.base.dir}/files/days.properties" overwrite="true" />
  </target>

  <target name="copy.files.ci" depends="copy.batch.test.properties" if="ci">
    <copy file="${rule-files}/ant/jdbc.properties.ci" tofile="${target.test}/jdbc.properties" overwrite="true" />
  </target>

  <target name="install" depends="package">
    <copy file="${basedir}/${target.dir}/${artifact}" todir="${common-lib}/compile"/>
    <copy file="${basedir}/${target.dir}/${sources.artifact}" todir="${common-lib}/compile/src"/>
  </target>

</project>
