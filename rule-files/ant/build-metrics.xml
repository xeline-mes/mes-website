<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<project name="rule-files-metrics" basedir=".">

    <property name="sonar.host.url" value="http://sonar.dev.xeline.com:9000" />
    <property name="sonar.jdbc.url" value="jdbc:postgresql://sonar.dev.xeline.com:5432/sonar" />
    <property name="sonar.jdbc.username" value="sonar" />
    <property name="sonar.jdbc.password" value="sonar" />
    <property name="sonar.jdbc.driverClassName" value="org.postgresql.Driver" />

    <property name="sonar.projectKey" value="${groupId}:${artifactId}" />
    <property name="sonar.projectName" value="${artifactId}" />
    <property name="sonar.projectVersion" value="${version}" />
    <property name="sonar.language" value="java" />
    <property name="sonar.sources" value="${basedir}/${src.main}" />
    <property name="sonar.sourceEncoding" value="${java.encoding}" />
    

    <target name="checkstyle">
        <path id="checkstyle.class.path"> 
            <fileset dir="${common-lib}/test"> 
                <include name="${checkstyle.jar}"/> 
            </fileset>
        </path> 
        <taskdef resource="checkstyletask.properties" classpathref="checkstyle.class.path"/>
        
        <checkstyle config="${checkstyle.config}" failonviolation="false">
            <fileset dir="${basedir}/${src.main}" includes="**/*.java"/>
            <formatter type="plain" />
            <formatter type="xml" toFile="${checkstyle.result}"/>
            <classpath refid="main.class.path"/>
        </checkstyle>
    </target>

    <condition property="have.findbugs">
        <and>
            <isset property="findbugs.home" />
        </and>
    </condition>
    
    <target name="checkFindbugs" unless="have.findbugs">
        <echo message="not found findbugs.home property. skip findbugs task." />
    </target>
    
    <target name="findbugs" if="have.findbugs" depends="checkFindbugs">
        <path id="findbugs.class.path"> 
            <fileset dir="${findbugs.home}/lib" /> 
        </path>
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.class.path" />
        
        <findbugs home="${findbugs.home}"
                  output="xml"
                  outputFile="${findbugs.outputFile}" >
            <auxClasspath refid="main.class.path" />
            <sourcePath path="${basedir}/${src.main}" />
            <class location="${basedir}/${target.main}" />
        </findbugs>
    </target>

    <target name="sonar">
        <path id="sonar.class.path"> 
            <fileset dir="${common-lib}/test"> 
                <include name="${sonar.jar}"/> 
            </fileset>
        </path>
        <taskdef resource="org/sonar/ant/antlib.xml" classpathref="sonar.class.path" />
        <sonar />
    </target>
</project>
